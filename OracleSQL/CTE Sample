with bk_charge_off as (
  select distinct loan_id 
  from table1
  where action_name like 'COFF_BK%'
),

ach_return_flag as (
  select
    mob.loan_id, 
    mob.due_d,
    least(sum(case when ach.return_code = 'R01' then 1 else 0 end),1) nsf_flg
  from lc_sbellone.months_on_book mob
    inner join table2 ln on (mob.loan_id = ln.id)
    inner join table3 ach on (mob.loan_id = ach.loan_id and ach.ach_report_d between mob.due_d and mob.next_due_d-1 and ach.amount = ln.rpa)      
  group by mob.loan_id, mob.due_d
),

roll_rates as (
  select 
    to_char(c1.due_d,'yyyy-mm') cyc_month,
    to_char(c1.next_due_d,'yyyy-mm') d16_cyc_month,
    case when c1.product = 'Lending Club' then 'Prime' else substr(c1.product,14,length(c1.product)-13) end product,
    c1.term,
    c1.grade, 
    (case when c1.cyc_bucket = 99 and bkc.loan_id is not null then 98
          when c1.cyc_bucket = 99 then 99 
          when c1.pmt_plan is not null then 0 
          when ach.loan_id is not null and c1.cyc_bucket = 0 then 1 --force ach returns into B1
        else c1.cyc_bucket end) cyc_bucket,
    late16_flg,
    sum(c1.prin_bal) open_bals,
    count(*) units
  from table4 c1
    left join table5 bkc on (c1.loan_id = bkc.loan_id)
    left join table6 ach on (c1.loan_id = ach.loan_id and c1.due_d = ach.due_d)
  where to_char(c1.due_d,'yyyy-mm') < to_char(sysdate,'yyyy-mm') --exclude current and future months
    and to_char(c1.due_d,'yyyy-mm') >= '2013-08'
  group by
    to_char(c1.due_d,'yyyy-mm'),
    to_char(c1.next_due_d,'yyyy-mm'),
    c1.term,
    c1.grade,
    (case when c1.product = 'Lending Club' then 'Prime' else substr(c1.product,14,length(c1.product)-13) end),
   c1.cyc_bucket,
    (case when c1.cyc_bucket = 99 and bkc.loan_id is not null then 98
          when c1.cyc_bucket = 99 then 99 
          when c1.pmt_plan is not null then 0 
          when ach.loan_id is not null and c1.cyc_bucket = 0 then 1 --force ach returns into B1
        else c1.cyc_bucket end),
    late16_flg)

select cyc_month, product, term, grade, cyc_bucket, sum(Open_bals) open_bals, sum(units) units, 
  (case when grade < 'D' then 'Low' else 'High' end) risk_level
from table7
group by cyc_month, product, term, grade, cyc_bucket
;
