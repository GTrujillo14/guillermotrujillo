#! usr/bin/env python
import pyhs2, csv

src_file = '/Users/my_name/dir/to/file'
table_name = 'qualtrics_test'

#columns = {'ResponseID: STRING, ResponseSet: STRING, IPAddress: STRING,\
#                        StartDate: STRING, EndDate: STRING, RecipientLastName: STRING,\
#                        RecipientFirstName: STRING, RecipientEmail: STRING, ExternalDataReference: STRING,\
#                        Finished: BIGINT, Status: BIGINT,\
#                        SurveyID: STRING, MessageID: STRING, SubjectID: STRING, ReminderMessageID: STRING,\
#                        ReminderSubjectID: STRING,\
#                        case_number: INT, agent_firstname: STRING, type: STRING, case_type: STRING,\
#                        case_subtype: STRING,\
#                        agent_name: STRING, closed_date: STRING, mapping_id: STRING,\
#                        case_status: STRING, agent_username: STRING,\
#                        HowSatisfied_w_LC_exp: SMALLINT, Anything_else_optional: STRING, Agent_Rating: SMALLINT,\
#                        Agent_Feedback_optional: STRING, Question_Answer_solved: BIGINT, LocationLatitude: FLOAT,\
#                        LocationLongitude: FLOAT, LocationAccuracy: BIGINT'}

with pyhs2.connect(
        host='sjcservicenode01-prod.tlcinternal.com',
        port=10000,
        authMechanism="PLAIN",
        user='username',
        password='password',
        database='operations_temp')as conn:

    with conn.cursor() as cur:

        with open(src_file, 'rb') as inp:
            reader = csv.reader(inp)
            for row in reader:
                to_db = [unicode(row[0],"utf8"), unicode(row[1],"utf8"), unicode(row[2],"utf8"), unicode(row[3],"utf8"), unicode(row[4],"utf8"),
                unicode(row[5],"utf8"), unicode(row[6],"utf8"), unicode(row[7],"utf8"), unicode(row[8],"utf8"), unicode(row[9],"utf8"),
                unicode(row[10],"utf8"), unicode(row[11],"utf8"), unicode(row[12],"utf8"), unicode(row[13],"utf8"), unicode(row[14],"utf8"),
                unicode(row[15],"utf8"), unicode(row[16],"utf8"), unicode(row[17],"utf8"), unicode(row[18],"utf8"), unicode(row[19],"utf8"),
                unicode(row[20],"utf8"), unicode(row[21],"utf8"), unicode(row[22],"utf8"), unicode(row[23],"utf8"), unicode(row[24],"utf8"),
                unicode(row[25],"utf8"), unicode(row[26],"utf8"), unicode(row[27],"utf8"), unicode(row[28],"utf8"), unicode(row[29],"utf8"),
                unicode(row[30],"utf8"), unicode(row[31],"utf8"), unicode(row[32],"utf8"), unicode(row[33],"utf8")]

                if table_name != 'qualtrics_test':
                        cur.execute("CREATE TABLE %s (ResponseID STRING, ResponseSet STRING, IPAddress STRING,\
                                StartDate STRING, EndDate STRING, RecipientLastName STRING,\
                                RecipientFirstName STRING, RecipientEmail STRING, ExternalDataReference STRING,\
                                Finished BIGINT, Status BIGINT,\
                                SurveyID STRING, MessageID STRING, SubjectID STRING, ReminderMessageID STRING,\
                                ReminderSubjectID STRING,\
                                case_number INT, agent_firstname STRING, type STRING, case_type STRING,\
                                case_subtype STRING,\
                                agent_name STRING, closed_date STRING, mapping_id STRING,\
                                case_status STRING, agent_username STRING,\
                                HowSatisfied_w_LC_exp SMALLINT, Anything_else_optional STRING, Agent_Rating SMALLINT,\
                                Agent_Feedback_optional STRING, Question_Answer_solved BIGINT, LocationLatitude FLOAT,\
                                LocationLongitude FLOAT, LocationAccuracy BIGINT)" % table_name)
#                        cur.execute("LOAD DATA LOCAL INPATH 'to_db' INTO TABLE %s" % table_name) #need to find which path file to store file in hdfs
                    print "Qualtrics table created"

                elif table_name == 'qualtrics_test':
                        cur.execute('TRUNCATE TABLE %s' % table_name)
                        print "Qualtrics table truncated"
#                        cur.execute("LOAD DATA LOCAL INPATH 'to_db' INTO TABLE %s" % table_name) #need to find which path file to store file in hdfs
                        print "CSAT data imported into %s" % table_name
                        cur.close()
